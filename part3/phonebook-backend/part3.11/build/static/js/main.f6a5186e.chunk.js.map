{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","nameFilter","handleFilterChange","type","value","onChange","Persons","person","removeEntry","name","number","onClick","PersonForm","props","onSubmit","addEntry","newName","handleNameChange","newNumber","handleNumberChange","Notification","message","error","condition","className","baseUrl","axios","get","then","response","data","nameObject","post","id","delete","updateObject","put","App","useState","persons","setPersons","setNewName","setNewNumber","setNameFilter","setMessage","errorState","setErrorState","useEffect","services","initialNames","filtered","filter","toLowerCase","includes","window","confirm","catch","setTimeout","p","event","target","preventDefault","duplicate","find","changedEntry","undefined","returnedName","concat","map","alert","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6a5186e.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ nameFilter, handleFilterChange}) => \n    <div>\n    Filter shown with: <input type=\"text\" value={nameFilter} onChange={handleFilterChange} />          \n    </div>\n   \nexport default Filter ","import React from 'react'\n\nconst Persons = ({person, removeEntry}) =>\n  <div>{person.name} {person.number}   <button onClick={removeEntry}>Delete</button> \n  </div>\n\nexport default Persons","import React from 'react'\n\nconst PersonForm = (props) => {\n    return(\n        <form onSubmit={props.addEntry}>\n            <div>\n                Full name: <input \n                value={props.newName}\n                onChange={props.handleNameChange}\n                />\n            </div>\n            <div>\n                Phone number: <input \n                value={props.newNumber}\n                onChange={props.handleNumberChange}\n                />\n            </div>\n            <div>\n                <button type=\"submit\">Add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({ message, error }) => {\n    \n    const condition = message===null || message==='' \n        ? <div></div> \n        : error===true\n        ? <div className=\"error\">{message}</div>\n        : <div className=\"success\">{message}</div>\n    \n    return <div>{condition}</div>\n\n  }\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst get = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (nameObject) => {\n    const request = axios.post(baseUrl, nameObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, updateObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, updateObject)\n    return request.then(response => response.data)\n  }\n\nexport default { get, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport services from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ nameFilter, setNameFilter ] = useState('') \n  const [ message, setMessage ] = useState('')\n  const [ errorState , setErrorState ] = useState(false)\n\n  useEffect(() => {\n    services\n      .get()\n      .then(initialNames => {\n        setPersons(initialNames)\n      })\n  }, [])\n\n  const filtered = persons.filter(\n    person => person.name.toLowerCase().includes(nameFilter.toLowerCase()))\n\n  const results = () => filtered.map(person =>\n    <Persons \n      key={person.name} \n      person={person} \n      removeEntry={()=> removeEntry(person.id, person.name)}\n    />)\n    \n  const addEntry = (event) => {\n    event.preventDefault()\n    const duplicate = persons.find(person => person.name === newName)\n    const changedEntry = {...duplicate, number: newNumber}\n\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n     }\n\n    return (duplicate===undefined \n      ? services.create(nameObject)\n      .then(returnedName => {\n        setNewName('')  \n        setNewNumber('')\n        setPersons(persons.concat(returnedName))\n        setMessage(\n          `${returnedName.name} was successfully added!`\n        )\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      }) \n      : (duplicate.name===newName && duplicate.number!==newNumber) \n      ? (window.confirm(`${newName} is already in the phonebook. Do you want to update the number?`)===true \n          ? (services.update(changedEntry.id, changedEntry)\n            .then(returnedName => {\n            setNewName('')  \n            setNewNumber('')\n            setPersons(persons.map(person => person.name !== newName? person : returnedName ))\n            setMessage(\n              `${returnedName.name}'s number was successfully changed!`\n            )\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n            })\n            .catch(error => {\n              setErrorState(true)\n              setMessage(\n                `Oops! ${duplicate.name} has already been removed from the server.`\n              )\n              setTimeout(() => {\n                setMessage(null)\n                setErrorState(false)\n              }, 5000)\n            })\n            ) \n          : setNewNumber(''), setNewName('')\n          )\n       : (duplicate.name===newName && duplicate.number===newNumber)\n       ? alert(`${duplicate.name}'s name and number are already in the phonebook!`)\n       : null)   \n   }\n  \n  const removeEntry = (id, name) => {\n    const confirmRemove = window.confirm(`Are you sure you want to delete ${name}?`)\n\n    return(\n      confirmRemove\n      ? services.remove(id)\n      .catch(error => {\n        setErrorState(true)\n        setMessage(\n          `Oops! ${name} has already been removed from the server.`\n          )\n        setTimeout(() => {\n          setMessage(null)\n          setErrorState(false)\n        }, 5000)\n        setPersons(persons.filter( p => p.id !== id))\n      }) &&\n      setPersons(persons.filter( p => p.id !== id))  \n      : null\n    )\n  }\n\n  const handleNameChange = (event) => \n    setNewName(event.target.value)\n\n  const handleNumberChange = (event) => \n    setNewNumber(event.target.value)\n\n  const handleFilterChange = (event) => \n    setNameFilter(event.target.value)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification \n        message={message} \n        error={errorState} />\n      <Filter \n        nameFilter={nameFilter} \n        handleFilterChange={handleFilterChange} \n        />\n      <h3>Add a new entry</h3>\n      <PersonForm \n        addEntry={addEntry} \n        newName={newName} \n        newNumber={newNumber} \n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        />\n      <h3>Numbers</h3>\n      <div>{results()}</div>\n    </div> \n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  )\n\n\n// import React from 'react'\n// import ReactDOM from 'react-dom'\n// import App from './App'\n\n\n// import axios from 'axios'\n \n// axios.get('http://localhost:3001/persons').then(response => {\n//   const persons = response.data\n//   ReactDOM.render(\n//     <App />,\n//     document.getElementById('root')\n//   )\n// })\n\n\n// import React, {useState} from 'react'\n// import ReactDOM from 'react-dom'\n\n// const App = () => {\n//   const contacts = [\n//     { id: 1, name: 'Arto Hellas', number: '040-123456' },\n//     { id: 2, name: 'Ada Lovelace', number: '39-44-5323523' },\n//     { id: 3, name: 'Dan Abramov', number: '12-43-234345' },\n//     { id: 4, name: 'Mary Poppendieck', number: '39-23-6423122' }\n//   ]\n\n//   const [state, setState] = useState('') \n\n//   const filtered = contacts.filter(\n//     contact=> contact.name.toLowerCase().indexOf(state.toLowerCase()) !== -1\n//   )\n\n//   const results = () => filtered.map(contact=> \n//     <li key={contact.id} contact={contact}>{contact.name} {contact.phone}</li>)\n\n//   const handleUpdateSearch = (event) => {\n//     setState(event.target.value)\n//   } \n  \n//     return (\n//       <div>\n//         <h1>Contacts List</h1>\n      \n//         <ul>\n//           {results()}\n//         </ul>\n//         <input type=\"text\" onChange={handleUpdateSearch} value={state}/>\n//       </div>\n//     )\n//   }\n\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// )\n\n\n\n\n// import React from 'react'\n// import ReactDOM from 'react-dom'\n// import App from './App'  // highlight-line\n\n// const notes = [\n//   {\n//     id: 1,\n//     content: 'HTML is easy',\n//     date: '2019-05-30T17:30:31.098Z',\n//     important: true\n//   },\n//   {\n//     id: 2,\n//     content: 'Browser can execute only Javascript',\n//     date: '2019-05-30T18:39:34.091Z',\n//     important: false\n//   },\n//   {\n//     id: 3,\n//     content: 'GET and POST are the most important methods of HTTP protocol',\n//     date: '2019-05-30T19:20:14.298Z',\n//     important: true\n//   }\n// ]\n\n// ReactDOM.render(\n//   <App notes={notes} />,\n//   document.getElementById('root')\n// )\n"],"sourceRoot":""}